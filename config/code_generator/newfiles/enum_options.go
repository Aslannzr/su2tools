package su2config
// This file is autogenerated using github.com/btracey/su2tools/config_writer/parser/write_options_structs.go based on the output from parse_config.py

// List of all the enumerable types and their options

// RegimeTypeEnum is the Adjoint type
type RegimeTypeEnum int
const(
Compressible RegimeTypeEnum = iota
Incompressible
Freesurface
)

// PhysicalProblemEnum is the Physical governing equations
type PhysicalProblemEnum int
const(
None PhysicalProblemEnum = iota
Euler
NavierStokes
Rans
PoissonEquation
AdjEuler
AdjNavierStokes
AdjRans
LinEuler
LinNavierStokes
Tne2Euler
Tne2NavierStokes
AdjTne2Euler
AdjTne2NavierStokes
WaveEquation
HeatEquation
LinearElasticity
FluidStructureEuler
FluidStructureNavierStokes
FluidStructureRans
TemplateSolver
)

// MathProblemEnum is the Mathematical problem
type MathProblemEnum int
const(
Direct MathProblemEnum = iota
Adjoint
Linearized
)

// KindTurbModelEnum is the Specify turbulence model
type KindTurbModelEnum int
const(
None KindTurbModelEnum = iota
Sa
Sst
Ml
)

// KindTransModelEnum is the Specify transition model
type KindTransModelEnum int
const(
None KindTransModelEnum = iota
Lm
)

// InletTypeEnum is the Inlet boundary type
type InletTypeEnum int
const(
TotalConditions InletTypeEnum = iota
MassFlow
)

// KindAdaptEnum is the Kind of grid adaptation
type KindAdaptEnum int
const(
None KindAdaptEnum = iota
Full
FullFlow
FullAdjoint
FullLinear
GradFlow
GradAdjoint
GradFlowAdj
Robust
Computable
Remaining
ComputableRobust
Wake
Smoothing
SupersonicShock
Twophase
)

// AnalyticalSurfdefEnum is the Use analytical definition for surfaces
type AnalyticalSurfdefEnum int
const(
None AnalyticalSurfdefEnum = iota
Naca0012Airfoil
Naca4412Airfoil
Cylinder
Biparabolic
)

// UnsteadySimulationEnum is the Unsteady simulation
type UnsteadySimulationEnum int
const(
No UnsteadySimulationEnum = iota
TimeStepping
DualTimeStepping-1stOrder
DualTimeStepping-2ndOrder
TimeSpectral
RotationalFrame
)

// TimeDiscreFlowEnum is the Time discretization
type TimeDiscreFlowEnum int
const(
EulerImplicit TimeDiscreFlowEnum = iota
Runge-kuttaExplicit
EulerExplicit
)

// TimeDiscreTne2Enum is the Time discretization
type TimeDiscreTne2Enum int
const(
EulerImplicit TimeDiscreTne2Enum = iota
Runge-kuttaExplicit
EulerExplicit
)

// TimeDiscreAdjtne2Enum is the Time discretization
type TimeDiscreAdjtne2Enum int
const(
EulerImplicit TimeDiscreAdjtne2Enum = iota
Runge-kuttaExplicit
EulerExplicit
)

// TimeDiscreAdjlevelsetEnum is the Time discretization
type TimeDiscreAdjlevelsetEnum int
const(
EulerImplicit TimeDiscreAdjlevelsetEnum = iota
Runge-kuttaExplicit
EulerExplicit
)

// TimeDiscreAdjEnum is the Time discretization
type TimeDiscreAdjEnum int
const(
EulerImplicit TimeDiscreAdjEnum = iota
Runge-kuttaExplicit
EulerExplicit
)

// TimeDiscreLinEnum is the Time discretization
type TimeDiscreLinEnum int
const(
EulerImplicit TimeDiscreLinEnum = iota
Runge-kuttaExplicit
EulerExplicit
)

// TimeDiscreTurbEnum is the Time discretization
type TimeDiscreTurbEnum int
const(
EulerImplicit TimeDiscreTurbEnum = iota
Runge-kuttaExplicit
EulerExplicit
)

// TimeDiscreAdjturbEnum is the Time discretization
type TimeDiscreAdjturbEnum int
const(
EulerImplicit TimeDiscreAdjturbEnum = iota
Runge-kuttaExplicit
EulerExplicit
)

// TimeDiscreWaveEnum is the Time discretization
type TimeDiscreWaveEnum int
const(
EulerImplicit TimeDiscreWaveEnum = iota
Runge-kuttaExplicit
EulerExplicit
)

// TimeDiscreFeaEnum is the Time discretization
type TimeDiscreFeaEnum int
const(
EulerImplicit TimeDiscreFeaEnum = iota
Runge-kuttaExplicit
EulerExplicit
)

// TimeDiscreHeatEnum is the Time discretization
type TimeDiscreHeatEnum int
const(
EulerImplicit TimeDiscreHeatEnum = iota
Runge-kuttaExplicit
EulerExplicit
)

// TimeDiscrePoissonEnum is the Time discretization
type TimeDiscrePoissonEnum int
const(
EulerImplicit TimeDiscrePoissonEnum = iota
Runge-kuttaExplicit
EulerExplicit
)

// LinearSolverEnum is the Linear solver for the implicit, mesh deformation, or discrete adjoint systems
type LinearSolverEnum int
const(
Fgmres LinearSolverEnum = iota
SteepestDescent
Newton
QuasiNewton
ConjugateGradient
Bcgstab
)

// LinearSolverPrecEnum is the Preconditioner for the Krylov linear solvers
type LinearSolverPrecEnum int
const(
LuSgs LinearSolverPrecEnum = iota
Jacobi
Linelet
)

// AdjturbLinSolverEnum is the Linear solver for the turbulent adjoint systems
type AdjturbLinSolverEnum int
const(
Fgmres AdjturbLinSolverEnum = iota
SteepestDescent
Newton
QuasiNewton
ConjugateGradient
Bcgstab
)

// AdjturbLinPrecEnum is the Preconditioner for the turbulent adjoint Krylov linear solvers
type AdjturbLinPrecEnum int
const(
LuSgs AdjturbLinPrecEnum = iota
Jacobi
Linelet
)

// GridMovementKindEnum is the Type of mesh motion
type GridMovementKindEnum int
const(
Enum list GridMovementKindEnum = iota
)

// GustTypeEnum is the Type of gust
type GustTypeEnum int
const(
None GustTypeEnum = iota
TopHat
Sine
OneMCosine
)

// GustDirEnum is the Direction of the gust X or Y dir
type GustDirEnum int
const(
YDir GustDirEnum = iota
XDir
)

// ConvCriteriaEnum is the Convergence criteria
type ConvCriteriaEnum int
const(
Residual ConvCriteriaEnum = iota
Cauchy
)

// CauchyFuncFlowEnum is the Flow functional for the Cauchy criteria
type CauchyFuncFlowEnum int
const(
Drag CauchyFuncFlowEnum = iota
Lift
Sideforce
Efficiency
Pressure
MomentX
MomentY
MomentZ
EquivalentArea
NearfieldPressure
ForceX
ForceY
ForceZ
Thrust
Torque
HeatLoad
FigureOfMerit
FreeSurface
TotalVolume
MaxThickness
Clearance
MinThickness
MaxThickSec1
MaxThickSec2
MaxThickSec3
MaxThickSec4
MaxThickSec5
)

// CauchyFuncAdjEnum is the Adjoint functional for the Cauchy criteria
type CauchyFuncAdjEnum int
const(
SensGeometry CauchyFuncAdjEnum = iota
SensMach
SensAoa
SensAos
)

// CauchyFuncLinEnum is the Linearized functional for the Cauchy criteria
type CauchyFuncLinEnum int
const(
DeltaDrag CauchyFuncLinEnum = iota
DeltaLift
)

// NumMethodGradEnum is the Numerical method for spatial gradients
type NumMethodGradEnum int
const(
WeightedLeastSquares NumMethodGradEnum = iota
GreenGauss
)

// ConvNumMethodFlowEnum is the No description
type ConvNumMethodFlowEnum int
const(
Roe-1stOrder ConvNumMethodFlowEnum = iota
None
Roe-2ndOrder
RoeTurkel1st
RoeTurkel2nd
Ausm-1stOrder
Ausm-2ndOrder
Ausmpw+-1stOrder
Ausmpw+-2ndOrder
Hllc-1stOrder
Hllc-2ndOrder
Sw-1stOrder
Sw-2ndOrder
Msw-1stOrder
Msw-2ndOrder
ScalarUpwind-1stOrder
ScalarUpwind-2ndOrder
ConvectiveTemplate
Jst
Lax-friedrich
)

// ViscNumMethodFlowEnum is the Viscous numerical method
type ViscNumMethodFlowEnum int
const(
AvgGradCorrected ViscNumMethodFlowEnum = iota
None
AvgGrad
Galerkin
)

// SourNumMethodFlowEnum is the Source term numerical method
type SourNumMethodFlowEnum int
const(
None SourNumMethodFlowEnum = iota
PiecewiseConstant
ChargeDist
TemplateSourceMethod
)

// SlopeLimiterFlowEnum is the Slope limiter
type SlopeLimiterFlowEnum int
const(
Venkatakrishnan SlopeLimiterFlowEnum = iota
None
Minmod
SharpEdges
)

// ConvNumMethodAdjEnum is the No description
type ConvNumMethodAdjEnum int
const(
Roe-1stOrder ConvNumMethodAdjEnum = iota
None
Roe-2ndOrder
RoeTurkel1st
RoeTurkel2nd
Ausm-1stOrder
Ausm-2ndOrder
Ausmpw+-1stOrder
Ausmpw+-2ndOrder
Hllc-1stOrder
Hllc-2ndOrder
Sw-1stOrder
Sw-2ndOrder
Msw-1stOrder
Msw-2ndOrder
ScalarUpwind-1stOrder
ScalarUpwind-2ndOrder
ConvectiveTemplate
Jst
Lax-friedrich
)

// ViscNumMethodAdjEnum is the Viscous numerical method
type ViscNumMethodAdjEnum int
const(
None ViscNumMethodAdjEnum = iota
AvgGrad
AvgGradCorrected
Galerkin
)

// SourNumMethodAdjEnum is the Source term numerical method
type SourNumMethodAdjEnum int
const(
None SourNumMethodAdjEnum = iota
PiecewiseConstant
ChargeDist
TemplateSourceMethod
)

// SlopeLimiterAdjflowEnum is the Slope limiter
type SlopeLimiterAdjflowEnum int
const(
None SlopeLimiterAdjflowEnum = iota
Venkatakrishnan
Minmod
SharpEdges
)

// SlopeLimiterTurbEnum is the Slope limiter
type SlopeLimiterTurbEnum int
const(
Venkatakrishnan SlopeLimiterTurbEnum = iota
None
Minmod
SharpEdges
)

// ConvNumMethodTurbEnum is the Convective numerical method
type ConvNumMethodTurbEnum int
const(
Roe-1stOrder ConvNumMethodTurbEnum = iota
None
Roe-2ndOrder
RoeTurkel1st
RoeTurkel2nd
Ausm-1stOrder
Ausm-2ndOrder
Ausmpw+-1stOrder
Ausmpw+-2ndOrder
Hllc-1stOrder
Hllc-2ndOrder
Sw-1stOrder
Sw-2ndOrder
Msw-1stOrder
Msw-2ndOrder
ScalarUpwind-1stOrder
ScalarUpwind-2ndOrder
ConvectiveTemplate
Jst
Lax-friedrich
)

// ViscNumMethodTurbEnum is the Viscous numerical method
type ViscNumMethodTurbEnum int
const(
AvgGradCorrected ViscNumMethodTurbEnum = iota
None
AvgGrad
Galerkin
)

// SourNumMethodTurbEnum is the Source term numerical method
type SourNumMethodTurbEnum int
const(
PiecewiseConstant SourNumMethodTurbEnum = iota
None
ChargeDist
TemplateSourceMethod
)

// SlopeLimiterAdjturbEnum is the Slope limiter
type SlopeLimiterAdjturbEnum int
const(
None SlopeLimiterAdjturbEnum = iota
Venkatakrishnan
Minmod
SharpEdges
)

// ConvNumMethodAdjturbEnum is the Convective numerical method
type ConvNumMethodAdjturbEnum int
const(
Roe-1stOrder ConvNumMethodAdjturbEnum = iota
None
Roe-2ndOrder
RoeTurkel1st
RoeTurkel2nd
Ausm-1stOrder
Ausm-2ndOrder
Ausmpw+-1stOrder
Ausmpw+-2ndOrder
Hllc-1stOrder
Hllc-2ndOrder
Sw-1stOrder
Sw-2ndOrder
Msw-1stOrder
Msw-2ndOrder
ScalarUpwind-1stOrder
ScalarUpwind-2ndOrder
ConvectiveTemplate
Jst
Lax-friedrich
)

// ViscNumMethodAdjturbEnum is the Viscous numerical method
type ViscNumMethodAdjturbEnum int
const(
None ViscNumMethodAdjturbEnum = iota
AvgGrad
AvgGradCorrected
Galerkin
)

// SourNumMethodAdjturbEnum is the Source term numerical method
type SourNumMethodAdjturbEnum int
const(
None SourNumMethodAdjturbEnum = iota
PiecewiseConstant
ChargeDist
TemplateSourceMethod
)

// ConvNumMethodLinEnum is the Convective numerical method
type ConvNumMethodLinEnum int
const(
Roe-1stOrder ConvNumMethodLinEnum = iota
None
Roe-2ndOrder
RoeTurkel1st
RoeTurkel2nd
Ausm-1stOrder
Ausm-2ndOrder
Ausmpw+-1stOrder
Ausmpw+-2ndOrder
Hllc-1stOrder
Hllc-2ndOrder
Sw-1stOrder
Sw-2ndOrder
Msw-1stOrder
Msw-2ndOrder
ScalarUpwind-1stOrder
ScalarUpwind-2ndOrder
ConvectiveTemplate
Jst
Lax-friedrich
)

// ViscNumMethodLinEnum is the Viscous numerical method
type ViscNumMethodLinEnum int
const(
None ViscNumMethodLinEnum = iota
AvgGrad
AvgGradCorrected
Galerkin
)

// SourNumMethodLinEnum is the Source term numerical method
type SourNumMethodLinEnum int
const(
None SourNumMethodLinEnum = iota
PiecewiseConstant
ChargeDist
TemplateSourceMethod
)

// SlopeLimiterAdjlevelsetEnum is the Slope limiter
type SlopeLimiterAdjlevelsetEnum int
const(
None SlopeLimiterAdjlevelsetEnum = iota
Venkatakrishnan
Minmod
SharpEdges
)

// ConvNumMethodAdjlevelsetEnum is the Convective numerical method
type ConvNumMethodAdjlevelsetEnum int
const(
Roe-1stOrder ConvNumMethodAdjlevelsetEnum = iota
None
Roe-2ndOrder
RoeTurkel1st
RoeTurkel2nd
Ausm-1stOrder
Ausm-2ndOrder
Ausmpw+-1stOrder
Ausmpw+-2ndOrder
Hllc-1stOrder
Hllc-2ndOrder
Sw-1stOrder
Sw-2ndOrder
Msw-1stOrder
Msw-2ndOrder
ScalarUpwind-1stOrder
ScalarUpwind-2ndOrder
ConvectiveTemplate
Jst
Lax-friedrich
)

// ViscNumMethodAdjlevelsetEnum is the Viscous numerical method
type ViscNumMethodAdjlevelsetEnum int
const(
None ViscNumMethodAdjlevelsetEnum = iota
AvgGrad
AvgGradCorrected
Galerkin
)

// SourNumMethodAdjlevelsetEnum is the Source term numerical method
type SourNumMethodAdjlevelsetEnum int
const(
None SourNumMethodAdjlevelsetEnum = iota
PiecewiseConstant
ChargeDist
TemplateSourceMethod
)

// ConvNumMethodTne2Enum is the Convective numerical method
type ConvNumMethodTne2Enum int
const(
Roe-1stOrder ConvNumMethodTne2Enum = iota
None
Roe-2ndOrder
RoeTurkel1st
RoeTurkel2nd
Ausm-1stOrder
Ausm-2ndOrder
Ausmpw+-1stOrder
Ausmpw+-2ndOrder
Hllc-1stOrder
Hllc-2ndOrder
Sw-1stOrder
Sw-2ndOrder
Msw-1stOrder
Msw-2ndOrder
ScalarUpwind-1stOrder
ScalarUpwind-2ndOrder
ConvectiveTemplate
Jst
Lax-friedrich
)

// ViscNumMethodTne2Enum is the Viscous numerical method
type ViscNumMethodTne2Enum int
const(
None ViscNumMethodTne2Enum = iota
AvgGrad
AvgGradCorrected
Galerkin
)

// SourNumMethodTne2Enum is the Source term numerical method
type SourNumMethodTne2Enum int
const(
None SourNumMethodTne2Enum = iota
PiecewiseConstant
ChargeDist
TemplateSourceMethod
)

// SlopeLimiterTne2Enum is the Slope limiter
type SlopeLimiterTne2Enum int
const(
None SlopeLimiterTne2Enum = iota
Venkatakrishnan
Minmod
SharpEdges
)

// ConvNumMethodAdjtne2Enum is the Convective numerical method
type ConvNumMethodAdjtne2Enum int
const(
Roe-1stOrder ConvNumMethodAdjtne2Enum = iota
None
Roe-2ndOrder
RoeTurkel1st
RoeTurkel2nd
Ausm-1stOrder
Ausm-2ndOrder
Ausmpw+-1stOrder
Ausmpw+-2ndOrder
Hllc-1stOrder
Hllc-2ndOrder
Sw-1stOrder
Sw-2ndOrder
Msw-1stOrder
Msw-2ndOrder
ScalarUpwind-1stOrder
ScalarUpwind-2ndOrder
ConvectiveTemplate
Jst
Lax-friedrich
)

// ViscNumMethodAdjtne2Enum is the Viscous numerical method
type ViscNumMethodAdjtne2Enum int
const(
None ViscNumMethodAdjtne2Enum = iota
AvgGrad
AvgGradCorrected
Galerkin
)

// SourNumMethodAdjtne2Enum is the Source term numerical method
type SourNumMethodAdjtne2Enum int
const(
None SourNumMethodAdjtne2Enum = iota
PiecewiseConstant
ChargeDist
TemplateSourceMethod
)

// SlopeLimiterAdjtne2Enum is the Slope limiter
type SlopeLimiterAdjtne2Enum int
const(
None SlopeLimiterAdjtne2Enum = iota
Venkatakrishnan
Minmod
SharpEdges
)

// ViscNumMethodWaveEnum is the Viscous numerical method
type ViscNumMethodWaveEnum int
const(
Galerkin ViscNumMethodWaveEnum = iota
None
AvgGrad
AvgGradCorrected
)

// SourNumMethodWaveEnum is the Source term numerical method
type SourNumMethodWaveEnum int
const(
None SourNumMethodWaveEnum = iota
PiecewiseConstant
ChargeDist
TemplateSourceMethod
)

// ViscNumMethodPoissonEnum is the Viscous numerical method
type ViscNumMethodPoissonEnum int
const(
None ViscNumMethodPoissonEnum = iota
AvgGrad
AvgGradCorrected
Galerkin
)

// SourNumMethodPoissonEnum is the Source term numerical method
type SourNumMethodPoissonEnum int
const(
None SourNumMethodPoissonEnum = iota
PiecewiseConstant
ChargeDist
TemplateSourceMethod
)

// ViscNumMethodFeaEnum is the Viscous numerical method
type ViscNumMethodFeaEnum int
const(
Galerkin ViscNumMethodFeaEnum = iota
None
AvgGrad
AvgGradCorrected
)

// SourNumMethodFeaEnum is the Source term numerical method
type SourNumMethodFeaEnum int
const(
None SourNumMethodFeaEnum = iota
PiecewiseConstant
ChargeDist
TemplateSourceMethod
)

// ViscNumMethodHeatEnum is the Viscous numerical method
type ViscNumMethodHeatEnum int
const(
Galerkin ViscNumMethodHeatEnum = iota
None
AvgGrad
AvgGradCorrected
)

// SourNumMethodHeatEnum is the Source term numerical method
type SourNumMethodHeatEnum int
const(
None SourNumMethodHeatEnum = iota
PiecewiseConstant
ChargeDist
TemplateSourceMethod
)

// SourNumMethodTemplateEnum is the Source term numerical method
type SourNumMethodTemplateEnum int
const(
None SourNumMethodTemplateEnum = iota
PiecewiseConstant
ChargeDist
TemplateSourceMethod
)

// AdjObjfuncEnum is the Adjoint problem boundary condition
type AdjObjfuncEnum int
const(
Drag AdjObjfuncEnum = iota
Lift
Sideforce
Efficiency
Pressure
MomentX
MomentY
MomentZ
EquivalentArea
NearfieldPressure
ForceX
ForceY
ForceZ
Thrust
Torque
HeatLoad
FigureOfMerit
FreeSurface
TotalVolume
MaxThickness
Clearance
MinThickness
MaxThickSec1
MaxThickSec2
MaxThickSec3
MaxThickSec4
MaxThickSec5
)

// GeoModeEnum is the Mode of the GDC code (analysis, or gradient)
type GeoModeEnum int
const(
Function GeoModeEnum = iota
Gradient
)

// SensSmoothingEnum is the Sensitivity smoothing
type SensSmoothingEnum int
const(
None SensSmoothingEnum = iota
Sobolev
Bigrid
)

// ContinuousEqnsEnum is the Continuous governing equation set
type ContinuousEqnsEnum int
const(
Euler ContinuousEqnsEnum = iota
NavierStokes
)

// DiscreteEqnsEnum is the Discrete governing equation set
type DiscreteEqnsEnum int
const(
None DiscreteEqnsEnum = iota
Sa
Sst
)

// OutputFormatEnum is the I/O
type OutputFormatEnum int
const(
Tecplot OutputFormatEnum = iota
Excel
Csv
Stl
TecplotBinary
Cgns
Paraview
)

// MeshFormatEnum is the Mesh input file format
type MeshFormatEnum int
const(
Su2 MeshFormatEnum = iota
Cgns
NetcdfAscii
)

// GasModelEnum is the Specify chemical model for multi-species simulations
type GasModelEnum int
const(
Argon GasModelEnum = iota
None
Air-7
Air-21
O2
N2
Air-5
Argon-sid
Onespecies
)

// DvKindEnum is the Kind of deformation
type DvKindEnum int
const(
Enum list DvKindEnum = iota
)

